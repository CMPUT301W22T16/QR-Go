/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/MapsActivity.java:75: Warning: SharedPreferences.edit() without a corresponding commit() or apply() call [CommitPrefEdits]
            SharedPreferences.Editor ed = loggedUser.edit();
                                          ~~~~~~~~~~~~~~~~~

   Explanation for issues of type "CommitPrefEdits":
   After calling edit() on a SharedPreference, you must call commit() or
   apply() on the editor to save the results.

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_maps.xml:23: Warning: Replace the <fragment> tag with FragmentContainerView. [FragmentTagUsage from fragment-1.4.0]
    <fragment xmlns:android="http://schemas.android.com/apk/res/android"
     ~~~~~~~~

   Explanation for issues of type "FragmentTagUsage":
   FragmentContainerView replaces the <fragment> tag as the preferred         
          way of adding fragments via XML. Unlike the <fragment> tag,
   FragmentContainerView                 uses a normal FragmentTransaction
   under the hood to add the initial fragment,                 allowing
   further FragmentTransaction operations on the FragmentContainerView        
           and providing a consistent timing for lifecycle events.

   https://developer.android.com/reference/androidx/fragment/app/FragmentContainerView.html

   Vendor: Android Open Source Project (fragment-1.4.0)
   Identifier: fragment-1.4.0
   Feedback: https://issuetracker.google.com/issues/new?component=192731

/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/MapsActivity.java:89: Warning: Resource IDs will be non-final by default in Android Gradle Plugin version 8.0, avoid using them in switch case statements [NonConstantResourceId]
                    case R.id.nav_search:
                         ~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/MapsActivity.java:92: Warning: Resource IDs will be non-final by default in Android Gradle Plugin version 8.0, avoid using them in switch case statements [NonConstantResourceId]
                    case R.id.nav_my_codes:
                         ~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/MapsActivity.java:95: Warning: Resource IDs will be non-final by default in Android Gradle Plugin version 8.0, avoid using them in switch case statements [NonConstantResourceId]
                    case R.id.nav_scan_code:
                         ~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/MapsActivity.java:98: Warning: Resource IDs will be non-final by default in Android Gradle Plugin version 8.0, avoid using them in switch case statements [NonConstantResourceId]
                    case R.id.nav_my_account:
                         ~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "NonConstantResourceId":
   Avoid the usage of resource IDs where constant expressions are required.

   A future version of the Android Gradle Plugin will generate R classes with
   non-constant IDs in order to improve the performance of incremental
   compilation.

/home/runner/work/QR-Go/QR-Go/src/app/build.gradle:39: Warning: A newer version of com.google.android.gms:play-services-maps than 17.0.1 is available: 18.0.2 [GradleDependency]
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/build.gradle:41: Warning: A newer version of com.google.firebase:firebase-firestore than 24.0.1 is available: 24.0.2 [GradleDependency]
    implementation 'com.google.firebase:firebase-firestore:24.0.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/build.gradle:42: Warning: A newer version of androidx.lifecycle:lifecycle-livedata-ktx than 2.4.0 is available: 2.4.1 [GradleDependency]
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/build.gradle:43: Warning: A newer version of androidx.lifecycle:lifecycle-viewmodel-ktx than 2.4.0 is available: 2.4.1 [GradleDependency]
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/build.gradle:44: Warning: A newer version of androidx.navigation:navigation-fragment than 2.4.0 is available: 2.4.1 [GradleDependency]
    implementation 'androidx.navigation:navigation-fragment:2.4.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/build.gradle:45: Warning: A newer version of androidx.navigation:navigation-ui than 2.4.0 is available: 2.4.1 [GradleDependency]
    implementation 'androidx.navigation:navigation-ui:2.4.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/build.gradle:51: Warning: A newer version of androidx.test:runner than 1.2.0 is available: 1.4.0 [GradleDependency]
    androidTestImplementation 'androidx.test:runner:1.2.0'
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/build.gradle:52: Warning: A newer version of androidx.test:rules than 1.2.0 is available: 1.4.0 [GradleDependency]
    androidTestImplementation 'androidx.test:rules:1.2.0'
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_new_game_qractivity.xml:40: Warning: Use databinding or explicit wiring of click listener in code [UsingOnClickInXml from appcompat-1.4.1]
        android:onClick="saveNewQRCode"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_new_game_qractivity.xml:66: Warning: Use databinding or explicit wiring of click listener in code [UsingOnClickInXml from appcompat-1.4.1]
        android:onClick="launchTakePhoto"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UsingOnClickInXml":
   Old versions of the platform do not properly support resolving
   android:onClick

   Vendor: Android Open Source Project (appcompat-1.4.1)
   Identifier: appcompat-1.4.1
   Feedback: https://issuetracker.google.com/issues/new?component=192731

/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/MapsActivity.java:37: Warning: Do not place Android context classes in static fields (static reference to FirebaseFirestore which has field context pointing to Context); this is a memory leak [StaticFieldLeak]
    public static FirebaseFirestore db;
           ~~~~~~

   Explanation for issues of type "StaticFieldLeak":
   A static field will leak contexts.

   Non-static inner classes have an implicit reference to their outer class.
   If that outer class is for example a Fragment or Activity, then this
   reference means that the long-running handler/loader/task will hold a
   reference to the activity which prevents it from getting garbage
   collected.

   Similarly, direct field references to activities and fragments from these
   longer running instances can cause leaks.

   ViewModel classes should never point to Views or non-application Contexts.

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_code_scanner.xml:2: Warning: This <FrameLayout> can be replaced with a <merge> tag [MergeRootFrame]
<FrameLayout
^

   Explanation for issues of type "MergeRootFrame":
   If a <FrameLayout> is the root of a layout and does not provide background
   or padding etc, it can often be replaced with a <merge> tag which is
   slightly more efficient. Note that this depends on context, so make sure
   you understand how the <merge> tag works before proceeding.

   https://android-developers.googleblog.com/2009/03/android-layout-tricks-3-optimize-by.html

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_qr_info.xml:2: Warning: The resource R.layout.activity_qr_info appears to be unused [UnusedResources]
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
^

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.

   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests=true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests=true.

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_maps.xml:23: Warning: This namespace declaration is redundant [RedundantNamespace]
    <fragment xmlns:android="http://schemas.android.com/apk/res/android"
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "RedundantNamespace":
   In Android XML documents, only specify the namespace on the root/document
   element. Namespace declarations elsewhere in the document are typically
   accidental leftovers from copy/pasting XML from other files or
   documentation.

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_new_game_qractivity.xml:75: Warning: Missing contentDescription attribute on image [ContentDescription]
    <ImageView
     ~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_qr_info.xml:8: Warning: Missing contentDescription attribute on image [ContentDescription]
    <ImageView
     ~~~~~~~~~

   Explanation for issues of type "ContentDescription":
   Non-textual widgets like ImageViews and ImageButtons should use the
   contentDescription attribute to specify a textual description of the widget
   such that screen readers and other accessibility tools can adequately
   describe the user interface.

   Note that elements in application screens that are purely decorative and do
   not provide any content or enable a user action should not have
   accessibility content descriptions. In this case, just suppress the lint
   warning with a tools:ignore="ContentDescription" attribute.

   Note that for text fields, you should not set both the hint and the
   contentDescription attributes since the hint will never be shown. Just set
   the hint.

   https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_new_game_qractivity.xml:14: Warning: Hardcoded string "123", should use @string resource [HardcodedText]
        android:text="123"
        ~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_new_game_qractivity.xml:28: Warning: Hardcoded string "Score", should use @string resource [HardcodedText]
        android:text="Score"
        ~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_new_game_qractivity.xml:41: Warning: Hardcoded string "Save", should use @string resource [HardcodedText]
        android:text="Save"
        ~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_new_game_qractivity.xml:52: Warning: Hardcoded string "Save location", should use @string resource [HardcodedText]
        android:text="Save location"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_new_game_qractivity.xml:67: Warning: Hardcoded string "Take photo of object", should use @string resource [HardcodedText]
        android:text="Take photo of object"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_qr_info.xml:30: Warning: Hardcoded string "QR NAME", should use @string resource [HardcodedText]
            android:text="QR NAME"
            ~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_qr_info.xml:38: Warning: Hardcoded string "QR LOCATION", should use @string resource [HardcodedText]
            android:text="QR LOCATION"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/menu/bottom_nav_menu.xml:7: Warning: Hardcoded string "Search", should use @string resource [HardcodedText]
        android:title="Search" />
        ~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/menu/bottom_nav_menu.xml:12: Warning: Hardcoded string "My Codes", should use @string resource [HardcodedText]
        android:title="My Codes" />
        ~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/menu/bottom_nav_menu.xml:17: Warning: Hardcoded string "Scan Code", should use @string resource [HardcodedText]
        android:title="Scan Code" />
        ~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/menu/bottom_nav_menu.xml:22: Warning: Hardcoded string "My Account", should use @string resource [HardcodedText]
        android:title="My Account" />
        ~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

/home/runner/work/QR-Go/QR-Go/src/app/src/test/java/com/example/qr_go/LoginQRCodeTest.java:14: Warning: Test is ignored without giving any explanation [IgnoreWithoutReason]
    @Ignore // need to mock firestore
    ~~~~~~~

   Explanation for issues of type "IgnoreWithoutReason":
   Ignoring a test without a reason makes it difficult to figure out the
   problem later.
   Please define an explicit reason why it is ignored, and when it can be
   resolved.

0 errors, 34 warnings
