/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/QRSearchFragment.java:46: Error: Call requires API level 24 (current min is 21): java.util.ArrayList#sort [NewApi]
            qrDisplays.sort(new QRListScoreComparator());
                       ~~~~

   Explanation for issues of type "NewApi":
   This check scans through all the Android API calls in the application and
   warns about any calls that are not available on all versions targeted by
   this application (according to its minimum SDK attribute in the manifest).

   If you really want to use this API and don't need to support older devices
   just set the minSdkVersion in your build.gradle or AndroidManifest.xml
   files.

   If your code is deliberately accessing newer APIs, and you have ensured
   (e.g. with conditional execution) that this code will only ever be called
   on a supported platform, then you can annotate your class or method with
   the @TargetApi annotation specifying the local minimum SDK to apply, such
   as @TargetApi(11), such that this check considers 11 rather than your
   manifest file's minimum SDK as the required API level.

   If you are deliberately setting android: attributes in style definitions,
   make sure you place this in a values-vNN folder in order to avoid running
   into runtime conflicts on certain devices where manufacturers have added
   custom attributes whose ids conflict with the new ones on later platforms.

   Similarly, you can use tools:targetApi="11" in an XML file to indicate that
   the element will only be inflated in an adequate context.

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_maps.xml:23: Warning: Replace the <fragment> tag with FragmentContainerView. [FragmentTagUsage from fragment-1.4.0]
    <fragment xmlns:android="http://schemas.android.com/apk/res/android"
     ~~~~~~~~

   Explanation for issues of type "FragmentTagUsage":
   FragmentContainerView replaces the <fragment> tag as the preferred         
          way of adding fragments via XML. Unlike the <fragment> tag,
   FragmentContainerView                 uses a normal FragmentTransaction
   under the hood to add the initial fragment,                 allowing
   further FragmentTransaction operations on the FragmentContainerView        
           and providing a consistent timing for lifecycle events.

   https://developer.android.com/reference/androidx/fragment/app/FragmentContainerView.html

   Vendor: Android Open Source Project (fragment-1.4.0)
   Identifier: fragment-1.4.0
   Feedback: https://issuetracker.google.com/issues/new?component=192731

/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/MapsActivity.java:71: Warning: Resource IDs will be non-final by default in Android Gradle Plugin version 8.0, avoid using them in switch case statements [NonConstantResourceId]
                    case R.id.nav_search:
                         ~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/MapsActivity.java:74: Warning: Resource IDs will be non-final by default in Android Gradle Plugin version 8.0, avoid using them in switch case statements [NonConstantResourceId]
                    case R.id.nav_my_codes:
                         ~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/MapsActivity.java:77: Warning: Resource IDs will be non-final by default in Android Gradle Plugin version 8.0, avoid using them in switch case statements [NonConstantResourceId]
                    case R.id.nav_scan_code:
                         ~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/MapsActivity.java:80: Warning: Resource IDs will be non-final by default in Android Gradle Plugin version 8.0, avoid using them in switch case statements [NonConstantResourceId]
                    case R.id.nav_my_account:
                         ~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "NonConstantResourceId":
   Avoid the usage of resource IDs where constant expressions are required.

   A future version of the Android Gradle Plugin will generate R classes with
   non-constant IDs in order to improve the performance of incremental
   compilation.

/home/runner/work/QR-Go/QR-Go/src/app/build.gradle:39: Warning: A newer version of com.google.android.gms:play-services-maps than 17.0.1 is available: 18.0.2 [GradleDependency]
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/build.gradle:41: Warning: A newer version of com.google.firebase:firebase-firestore than 24.0.1 is available: 24.0.2 [GradleDependency]
    implementation 'com.google.firebase:firebase-firestore:24.0.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/build.gradle:42: Warning: A newer version of androidx.lifecycle:lifecycle-livedata-ktx than 2.4.0 is available: 2.4.1 [GradleDependency]
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/build.gradle:43: Warning: A newer version of androidx.lifecycle:lifecycle-viewmodel-ktx than 2.4.0 is available: 2.4.1 [GradleDependency]
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/build.gradle:44: Warning: A newer version of androidx.navigation:navigation-fragment than 2.4.0 is available: 2.4.1 [GradleDependency]
    implementation 'androidx.navigation:navigation-fragment:2.4.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/build.gradle:45: Warning: A newer version of androidx.navigation:navigation-ui than 2.4.0 is available: 2.4.1 [GradleDependency]
    implementation 'androidx.navigation:navigation-ui:2.4.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_search.xml:21: Warning: Invalid layout param in a RelativeLayout: layout_weight [ObsoleteLayoutParam]
            android:layout_weight="0"
            ~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_search.xml:33: Warning: Invalid layout param in a RelativeLayout: layout_weight [ObsoleteLayoutParam]
            android:layout_weight="1"
            ~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ObsoleteLayoutParam":
   The given layout_param is not defined for the given layout, meaning it has
   no effect. This usually happens when you change the parent layout or move
   view code around without updating the layout params. This will cause
   useless attribute processing at runtime, and is misleading for others
   reading the layout so the parameter should be removed.

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_code_scanner.xml:2: Warning: This <FrameLayout> can be replaced with a <merge> tag [MergeRootFrame]
<FrameLayout
^

   Explanation for issues of type "MergeRootFrame":
   If a <FrameLayout> is the root of a layout and does not provide background
   or padding etc, it can often be replaced with a <merge> tag which is
   slightly more efficient. Note that this depends on context, so make sure
   you understand how the <merge> tag works before proceeding.

   https://android-developers.googleblog.com/2009/03/android-layout-tricks-3-optimize-by.html

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/qr_list_content.xml:18: Warning: Use a layout_width of 0dp instead of wrap_content for better performance [InefficientWeight]
        android:layout_width="wrap_content"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "InefficientWeight":
   When only a single widget in a LinearLayout defines a weight, it is more
   efficient to assign a width/height of 0dp to it since it will absorb all
   the remaining space anyway. With a declared width/height of 0dp it does not
   have to measure its own size first.

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_maps.xml:23: Warning: This namespace declaration is redundant [RedundantNamespace]
    <fragment xmlns:android="http://schemas.android.com/apk/res/android"
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_search.xml:78: Warning: This namespace declaration is redundant [RedundantNamespace]
        xmlns:android="http://schemas.android.com/apk/res/android"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "RedundantNamespace":
   In Android XML documents, only specify the namespace on the root/document
   element. Namespace declarations elsewhere in the document are typically
   accidental leftovers from copy/pasting XML from other files or
   documentation.

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_search.xml:40: Warning: Missing autofillHints attribute [Autofill]
    <EditText
     ~~~~~~~~

   Explanation for issues of type "Autofill":
   Specify an autofillHints attribute when targeting SDK version 26 or higher
   or explicitly specify that the view is not important for autofill. Your app
   can help an autofill service classify the data correctly by providing the
   meaning of each view that could be autofillable, such as views representing
   usernames, passwords, credit card fields, email addresses, etc.

   The hints can have any value, but it is recommended to use predefined
   values like 'username' for a username or 'creditCardNumber' for a credit
   card number. For a list of all predefined autofill hint constants, see the
   AUTOFILL_HINT_ constants in the View reference at
   https://developer.android.com/reference/android/view/View.html.

   You can mark a view unimportant for autofill by specifying an
   importantForAutofill attribute on that view or a parent view. See
   https://developer.android.com/reference/android/view/View.html#setImportant
   ForAutofill(int).

   https://developer.android.com/guide/topics/text/autofill.html

/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/QRArrayAdapter.java:42: Warning: Number formatting does not take into account locale settings. Consider using String.format instead. [SetTextI18n]
        scoreView.setText(qrToDisplay.getScore().toString());
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/UserSearchFragment.java:37: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        testTextView.setText("user search, sort using: " + sortPos + " \nfound " + userDisplays.size() + "users");
                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/UserSearchFragment.java:37: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
        testTextView.setText("user search, sort using: " + sortPos + " \nfound " + userDisplays.size() + "users");
                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/java/com/example/qr_go/UserSearchFragment.java:37: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
        testTextView.setText("user search, sort using: " + sortPos + " \nfound " + userDisplays.size() + "users");
                                                                                                         ~~~~~~~

   Explanation for issues of type "SetTextI18n":
   When calling TextView#setText
   * Never call Number#toString() to format numbers; it will not handle
   fraction separators and locale-specific digits properly. Consider using
   String#format with proper format specifications (%d or %f) instead.
   * Do not pass a string literal (e.g. "Hello") to display text. Hardcoded
   text can not be properly translated to other languages. Consider using
   Android resource strings instead.
   * Do not build messages by concatenating text chunks. Such messages can not
   be properly translated.

   https://developer.android.com/guide/topics/resources/localization.html

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_search.xml:23: Warning: Hardcoded string "Back", should use @string resource [HardcodedText]
            android:text="Back"
            ~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_search.xml:44: Warning: Hardcoded string "Temp Search Bar", should use @string resource [HardcodedText]
        android:hint="Temp Search Bar"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_search.xml:69: Warning: Hardcoded string "QR Codes", should use @string resource [HardcodedText]
                android:text="QR Codes" />
                ~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_search.xml:73: Warning: Hardcoded string "Players", should use @string resource [HardcodedText]
                android:text="Players" />
                ~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/menu/bottom_nav_menu.xml:7: Warning: Hardcoded string "Search", should use @string resource [HardcodedText]
        android:title="Search" />
        ~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/menu/bottom_nav_menu.xml:12: Warning: Hardcoded string "My Codes", should use @string resource [HardcodedText]
        android:title="My Codes" />
        ~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/menu/bottom_nav_menu.xml:17: Warning: Hardcoded string "Scan Code", should use @string resource [HardcodedText]
        android:title="Scan Code" />
        ~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/menu/bottom_nav_menu.xml:22: Warning: Hardcoded string "My Account", should use @string resource [HardcodedText]
        android:title="My Account" />
        ~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/qr_list_content.xml:12: Warning: Hardcoded string "12345", should use @string resource [HardcodedText]
        android:text="12345"
        ~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/qr_list_content.xml:20: Warning: Hardcoded string "12345", should use @string resource [HardcodedText]
        android:text="12345"
        ~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_search.xml:22: Warning: When you define paddingLeft you should probably also define paddingRight for right-to-left symmetry [RtlSymmetry]
            android:paddingLeft="0dp"
            ~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "RtlSymmetry":
   If you specify padding or margin on the left side of a layout, you should
   probably also specify padding on the right side (and vice versa) for
   right-to-left layout symmetry.

/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_search.xml:20: Warning: Consider replacing android:layout_alignParentLeft with android:layout_alignParentStart="true" to better support right-to-left layouts [RtlHardcoded]
            android:layout_alignParentLeft="true"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_search.xml:22: Warning: Consider replacing android:paddingLeft with android:paddingStart="0dp" to better support right-to-left layouts [RtlHardcoded]
            android:paddingLeft="0dp"
            ~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/activity_search.xml:34: Warning: Consider replacing android:layout_alignParentRight with android:layout_alignParentEnd="true" to better support right-to-left layouts [RtlHardcoded]
            android:layout_alignParentRight="true"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/qr_list_content.xml:23: Warning: Use "end" instead of "right" to ensure correct behavior in right-to-left locales [RtlHardcoded]
        android:gravity="center|right"
                         ~~~~~~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/main/res/layout/spinner_item.xml:10: Warning: Use "end" instead of "right" to ensure correct behavior in right-to-left locales [RtlHardcoded]
    android:gravity="right"
                     ~~~~~

   Explanation for issues of type "RtlHardcoded":
   Using Gravity#LEFT and Gravity#RIGHT can lead to problems when a layout is
   rendered in locales where text flows from right to left. Use Gravity#START
   and Gravity#END instead. Similarly, in XML gravity and layout_gravity
   attributes, use start rather than left.

   For XML attributes such as paddingLeft and layout_marginLeft, use
   paddingStart and layout_marginStart. NOTE: If your minSdkVersion is less
   than 17, you should add both the older left/right attributes as well as the
   new start/end attributes. On older platforms, where RTL is not supported
   and the start/end attributes are unknown and therefore ignored, you need
   the older left/right attributes. There is a separate lint check which
   catches that type of error.

   (Note: For Gravity#LEFT and Gravity#START, you can use these constants even
   when targeting older platforms, because the start bitmask is a superset of
   the left bitmask. Therefore, you can use gravity="start" rather than
   gravity="left|start".)

/home/runner/work/QR-Go/QR-Go/src/app/src/test/java/com/example/qr_go/LoginQRCodeTest.java:15: Warning: Test is ignored without giving any explanation [IgnoreWithoutReason]
    @Ignore // need to mock firestore
    ~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/test/java/com/example/qr_go/UserTest.java:20: Warning: Test is ignored without giving any explanation [IgnoreWithoutReason]
    @Ignore
    ~~~~~~~
/home/runner/work/QR-Go/QR-Go/src/app/src/test/java/com/example/qr_go/UserTest.java:31: Warning: Test is ignored without giving any explanation [IgnoreWithoutReason]
    @Ignore
    ~~~~~~~

   Explanation for issues of type "IgnoreWithoutReason":
   Ignoring a test without a reason makes it difficult to figure out the
   problem later.
   Please define an explicit reason why it is ignored, and when it can be
   resolved.

1 errors, 41 warnings
