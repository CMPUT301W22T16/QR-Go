// Generated by view binder compiler. Do not edit!
package com.example.qr_go.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.example.qr_go.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton backButton;

  @NonNull
  public final BottomNavigationView bottomNavView;

  @NonNull
  public final EditText searchBar;

  @NonNull
  public final ViewPager2 searchPager;

  @NonNull
  public final TabLayout searchTabLayout;

  @NonNull
  public final Spinner sortSpinner;

  private ActivitySearchBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton backButton,
      @NonNull BottomNavigationView bottomNavView, @NonNull EditText searchBar,
      @NonNull ViewPager2 searchPager, @NonNull TabLayout searchTabLayout,
      @NonNull Spinner sortSpinner) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.bottomNavView = bottomNavView;
    this.searchBar = searchBar;
    this.searchPager = searchPager;
    this.searchTabLayout = searchTabLayout;
    this.sortSpinner = sortSpinner;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_button;
      MaterialButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.bottom_nav_view;
      BottomNavigationView bottomNavView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavView == null) {
        break missingId;
      }

      id = R.id.search_bar;
      EditText searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.search_pager;
      ViewPager2 searchPager = ViewBindings.findChildViewById(rootView, id);
      if (searchPager == null) {
        break missingId;
      }

      id = R.id.search_tab_layout;
      TabLayout searchTabLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchTabLayout == null) {
        break missingId;
      }

      id = R.id.sort_spinner;
      Spinner sortSpinner = ViewBindings.findChildViewById(rootView, id);
      if (sortSpinner == null) {
        break missingId;
      }

      return new ActivitySearchBinding((LinearLayout) rootView, backButton, bottomNavView,
          searchBar, searchPager, searchTabLayout, sortSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
